
---
apiVersion: v1
kind: PersistentVolumeClaim #创建PVC
metadata:
  name: minio
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteOnce # 权限
  resources: # 资源
    requests:
      storage: 5Gi
  storageClassName: nfs-csi #请求PV 资源，这里是PV的名字

---
apiVersion: apps/v1
kind: Deployment
metadata:
  # This name uniquely identifies the Deployment
  name: minio
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: minio # has to match .spec.template.metadata.labels
  strategy:
    # Specifies the strategy used to replace old Pods by new ones
    # Refer: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    type: Recreate
  template:
    metadata:
      labels:
        # This label is used as a selector in Service definition
        app: minio
    spec:
      # Volumes used by this deployment
      volumes:
      - name: data
        # This volume is based on PVC
        persistentVolumeClaim:
          # Name of the PVC created earlier
          claimName: minio
      containers:
      - name: minio
        # Volume mounts for this container
        volumeMounts:
        # Volume 'data' is mounted to path '/data'
        - name: data 
          mountPath: /data
        # Pulls the latest Minio image from Docker Hub
        image: registry.cn-guangzhou.aliyuncs.com/kubernetes-default/minio:RELEASE.2023-03-24T21-41-23Z
        command:
          - /bin/bash
          - -c
        args:
          - minio server /data --console-address :9001
        env:
        # MinIO access key and secret key
        - name: MINIO_ROOT_USER
          value: "minio"
        - name: MINIO_ROOT_PASSWORD
          value: "minio123"
        ports:
        - containerPort: 9000
        - containerPort: 9001
        # Readiness probe detects situations when MinIO server instance
        # is not ready to accept traffic. Kubernetes doesn't forward
        # traffic to the pod while readiness checks fail.
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
        # Liveness probe detects situations where MinIO server instance
        # is not working properly and needs restart. Kubernetes automatically
        # restarts the pods if liveness checks fail.
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20

---
kind: Service
apiVersion: v1
metadata:
  name: minio-service
  namespace: monitoring
  labels:
    app: minio-service
spec:
  ports:
    - name: http-9000
      protocol: TCP
      port: 9000
    - name: http-9001
      protocol: TCP
      port: 9001
  selector:
    app: minio
  type: NodePort
