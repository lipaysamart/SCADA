apiVersion: v1
kind: Secret
metadata:
  name: loki-config
  namespace: monitoring
  labels:
    helm.sh/chart: loki-distributed-0.71.2
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki
    app.kubernetes.io/version: "2.8.4"
    app.kubernetes.io/managed-by: Helm
stringData:
  config.yaml: |
    auth_enabled: true
    server:
      http_listen_port: 3100
      # HTTP服务器的空闲超时时间
      http_server_idle_timeout: 2m
      # gRPC调用的并发流的数量限制（0表示无限制, 默认100）
      grpc_server_max_concurrent_streams: 0
      log_format: json
      log_level: info

    # 通用配置
    common:
      compactor_address: http://loki-loki-distributed-compactor:3100

    compactor:
      # 下载文件进行压缩的工作目录。
      working_directory: /var/loki/compactor
      # 用于存储boltdb文件的共享存储。
      shared_store: s3
      # 重新运行压缩操作的间隔。
      compaction_interval: 5m
      # 应用/执行保留的间隔时间。0表示与压缩间隔相同的间隔运行。如果非零，则应始终是压缩间隔的倍数。
      apply_retention_interval: 0
      compactor_ring:
        kvstore:
          store: memberlist
      shared_store_key_prefix: compactor_index/

    distributor:
      ring:
        kvstore:
          store: memberlist
      rate_store:
        # 向ingester流API发出的并发请求的最大数量
        max_request_parallelism: 1000
        # 分发器从ingester更新当前流速的间隔
        stream_rate_update_interval: 3s
        # 更新速率时，分发器与任何给定的ingester之间的通信超时
        ingester_request_timeout: 5s

    frontend:
      # 每个前端租户的最大未完成请求数；超过此数会返回 HTTP 429 错误。
      max_outstanding_per_tenant: 1000000
      # 压缩 HTTP 响应。
      compress_responses: true
      # 查询持续时间超过指定时间的查询将被记录日志。设置为 0 以禁用该功能。
      log_queries_longer_than: 0
      # 用于尾部代理的查询器的 URL
      tail_proxy_url: http://loki-loki-distributed-querier:3100
    frontend_worker:
      # 查询前端服务的地址，格式为host:port。
      frontend_address: loki-loki-distributed-query-frontend-headless:9095
      # 每个查询前端或查询调度器同时处理的查询数。
      parallelism: 10

    # 配置ingester以及ingester将如何向键值存储注册自身
    ingester:
      # 块的目标“压缩”大小（以字节为单位）。这是一个期望的大小，而不是精确的大小。
      chunk_target_size: 1672864
      # 块的目标“未压缩”大小（以字节为单位）。当超过此阈值时，头块将在块内部剪切并压缩。
      chunk_block_size: 262144
      # 用于压缩块的算法。（none、gzip、lz4-64k、snappy、lz4-256k、lz4-1M、lz4、flate、zstd）
      chunk_encoding: snappy
      # 如果块未达到最大块大小，则块在没有更新的情况下在内存中停留多长时间后进行刷新。
      chunk_idle_period: 10m
      # 块在刷新后在内存中保留的持续时间。
      chunk_retain_period: 30s
      # 内存中时间序列块的最大持续时间。如果一个时间序列运行时间超过此值，当前块将被刷新到存储中，并创建一个新的块。
      max_chunk_age: 1h
      lifecycler:
        ring:
          kvstore:
            store: memberlist
          # 写入和读取的ingesters数量。
          replication_factor: 3
      max_transfer_retries: 0
      wal:
        # 在重放期间WAL可以使用的最大内存大小。达到此限制后，它将在继续之前将数据刷新到存储中。可以应用单位后缀（KB、MB、GB）。
        replay_memory_ceiling: 256MB
        # 存储和/或从中恢复WAL数据的目录。
        dir: /var/loki/wal

    limits_config:
      # 强制每个样本都有一个指标名称。
      enforce_metric_name: false
      # 每个流每秒的最大字节速率。
      per_stream_rate_limit: 4MB
      # 每个流的最大突发字节数
      per_stream_rate_limit_burst: 15MB
      # 每个用户的摄取速率限制，以每秒样本大小为单位。单位为MB。
      ingestion_rate_mb: 6
      # 每个用户允许的摄取突发大小（以样本大小为单位）。单位为MB。即使在“global”策略下，突发大小也是指每个分发器的本地速率限制器，并且应该设置为单个推送请求中预期的最大日志大小。
      ingestion_burst_size_mb: 8
      # 每个标签集的标签名称的最大数量。
      max_label_names_per_series: 30
      # 每个租户允许缓存的最新结果，以防止缓存可能仍在变动的最新结果。
      max_cache_freshness_per_query: 10m
      # 是否拒绝旧样本。  
      reject_old_samples: true
      # 拒绝之前的样本的最大接受时间。
      reject_old_samples_max_age: 1w
      # 每个用户每个接收器的活跃流的最大数量，设置为0以禁用。
      max_streams_per_user: 0
      # 全局设置,每个集群中每个用户的活跃流的最大数量，设置为0以禁用。
      max_global_streams_per_user: 0
      # 单个查询中可以获取的最大块数。
      max_chunks_per_query: 2000000
      # 每个查询的最大流匹配器数量。
      max_streams_matchers_per_query: 100000
      # 查询返回的最大日志条目数。
      max_entries_limit_per_query: 50000
      # 限制查询返回的唯一标签集的最大数量。当达到限制时，将返回错误。
      max_query_series: 5000
      # 索引查询的基数限制。
      cardinality_limit: 100000
      # 按时间间隔拆分查询并并行执行。值为0禁用按时间拆分。
      split_queries_by_interval: 30m

    memberlist:
      join_members:
      - loki-loki-distributed-memberlist

    # 配置查询器。仅在运行所有模块或仅查询器时适用。
    querier:
      # 超过此时间范围的查询不会发送到ingester。0表示所有查询都发送到ingester。
      query_ingesters_within: 0
      # 允许的最大并发查询数。
      max_concurrent: 10
      # 仅查询存储，不尝试任何ingester。这对于仅存储数据运行的独立查询池非常有用。
      query_store_only: true
      # 当为true时，查询器仅查询ingester，而不是存储数据。当对象存储不可用时很有用。
      query_ingester_only: false
      # 当为true时，允许查询跨多个租户。
      multi_tenant_queries_enabled: true
      # 当为true时，将强制执行通过头部发送的查询器限制。
      per_request_limits_enabled: false

    # 配置Loki查询调度程序。配置后，它将查询队列与查询前端分开
    query_scheduler:
      # 每个查询调度器每个租户的最大未完成请求数。
      max_outstanding_requests_per_tenant: 100000
      # 设置为true以创建并将查询调度器放置在一个环中。
      use_scheduler_ring: true
      scheduler_ring:
        kvstore:
          store: memberlist

    # 配置Loki查询前端中的查询拆分和缓存
    query_range:
      align_queries_with_step: true
      cache_results: true
      max_retries: 5
      results_cache:
        cache:
          redis:
            endpoint: redis:6379
            expiration: 1h

    ruler:
      alertmanager_url: http://alertmanager-main:9093
      external_url: https://alertmanager.example.com
      storage:
        local:
          directory: /etc/loki/rules
        type: local
      rule_path: /tmp/loki/scratch
      evaluation_interval: 2m
      enable_alertmanager_v2: true
      notification_timeout: 30s
      enable_api: true
      ring:
        kvstore:
          store: memberlist

    schema_config:
      configs:
      - from: "2022-07-11"
        index:
          period: 24h
          prefix: loki_index_
        object_store: s3
        schema: v12
        store: boltdb-shipper

    runtime_config:
      file: /var/loki-distributed-runtime/runtime.yaml

    # 配置如何缓存块以及在将它们保存到后端存储之前等待多长时间
    chunk_store_config:
      chunk_cache_config:
        redis:
          endpoint: redis:6379
          expiration: 1h
      write_dedupe_cache_config:
        redis:
          endpoint: redis:6379
          expiration: 1h
      max_look_back_period: 0s

    storage_config:
      aws:
        endpoint: minio-service:9000
        insecure: true
        bucketnames: chunks
        access_key_id: minio
        secret_access_key: minio123
        s3forcepathstyle: true
        http_config:
          idle_conn_timeout: 90s
          response_header_timeout: 5s
          insecure_skip_verify: true
      boltdb_shipper:
        active_index_directory: /var/loki/index
        cache_ttl: 12h
        shared_store: s3
        cache_location: /var/loki/cache
      # 每批获取的最大块数。
      max_chunk_batch_size: 100
      # 并行获取块的最大数量。
      max_parallel_get_chunk: 500
      # 活动索引条目的缓存有效期。不应超过-ingester.max-chunk-idle
      index_cache_validity: 10m
      # 缓存配置
      index_queries_cache_config:
        redis:
          endpoint: redis:6379
          expiration: 1h

    table_manager:
      retention_deletes_enabled: false
      retention_period: 0s
type: Opaque
